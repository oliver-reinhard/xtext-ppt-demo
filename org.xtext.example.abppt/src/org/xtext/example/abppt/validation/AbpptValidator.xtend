/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.abppt.validation

import com.google.common.collect.Maps
import org.eclipse.xtext.validation.Check
import org.xtext.example.abppt.abppt.AbpptPackage
import org.xtext.example.abppt.abppt.Presentation

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class AbpptValidator extends AbstractAbpptValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					AbpptPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}


	@Check
	def checkSlideReferencesByPresentation(Presentation presentation) {
		val map = Maps.newHashMap
		for(slide : presentation.slides) {
			var count = map.get(slide)
			if (count === null)  count = 0
			map.put(slide, count+1)
		}
		for(i : 0 ..< presentation.slides.size) {
			val slide = presentation.slides.get(i)
			if (map.get(slide) > 1) {
				warning("Slide is contained in presentation more than once", presentation, AbpptPackage.eINSTANCE.presentation_Slides, i)
			}
		}
	}
	
}
